alias(sys)
{
	# SysInfo alias KVIrc script © un1versal 2016
	# License: GPLv2+ https://git.io/vKLjk
	# Requires inxi 2.2 or newer
	# sen (sensors) option requires lm-sensors installed and configured
	%scriptname = "SysInfo"
	%version = "v1.2.0"
	%cpright = "© un1versal 2016 - GPLv2"
	%link = "https://git.io/vKfR1"
	%S = "$b":"$b"
	%aliasname = "sys"

	if("$system.ostype" != "UNIX")
	{
		echo -i=$msgtype(GenericVerbose) $tr("This is not a supported Linux/UNIX OS! Support maybe added later")
		return;
	}

	switch($0)
	{
		case(cpu):
		{
			exec ("inxi -c 10 -C")
			{
				msg $target $1;
			}
			break;
		}
		case(mob):
		{
			exec ("inxi -c 10 -M")
			{
				msg $target $1;
			}
			break;
		}
		case(net):
		{
			exec ("inxi -c 10 -Nx")
			{
				msg $target $1;
			}
			break;
		}
		case(gfx):
		{
			exec ("inxi -c 10 -G")
			{
				msg $target $1;
			}
			break;
		}
		case(snd):
		{
			exec ("inxi -c 10 -A")
			{
				msg $target $1;
			}
			break;
		}
		case(hdd):
		{
			exec ("inxi -c 10 -D")
			{
				msg $target $1;
			}
			break;
		}
		case(osv):
		{
			exec ("inxi -c 10 -! 31 -S")
			{
				msg $target $1;
			}
			break;
		}
		case(sen):
		{
			exec ("inxi -c 10 -s")
			{
				msg $target $1;
			}
			break;
		}
		case(share):
		{
			%nick = $1
			if(%nick != "")
			{
				say $tr("%nick: have a look at %scriptname %version %link")
				break;
			}
			else
			{
				say $tr("Why dont you have a look at %scriptname %version %link")
				break;
			}
		}
		case(uninstall):
		{
			%scriptname = "SysInfo"
			if ($window($tr(Alias Editor)) != "0")
			{
				dialog.message -b ($tr("%scriptname Uninstaller - KVIrc"), $tr("The <b>%scriptname</b> uninstaller detected some editor window(s) open."<br> \
				"Do you want the uninstaller to close the open editor window(s) and proceed with uninstallation?"), information, \
				$tr("&Yes Proceed"), $tr("&No, I have Work to Save"), $tr("&Quit"))
				{
					%scriptname = "SysInfo"
					switch($0)
					{
						case("0"):
						{
							echo -i=$msgtype(GenericStatus) $tr("The user told $b%scriptname$b's uninstaller to proceed.")
							timer -s (uninstall,2000)
							echo -i=$msgtype(GenericWarning) $tr("Closing "$b"$window"$b" Alias Editor window.")
							window.close -q $window($tr("Alias Editor"))
							echo -i=$msgtype(GenericVerbose) $tr("Now uninstalling $b%scriptname$b...")
							alias(%aliasname){}
							echo -i=$msgtype(GenericVerbose) $tr("Uninstall of $balias(%aliasname)$b is now complete!")
							break;
						}
						case("1"):
						{
							echo -i=$msgtype(GenericWarning) $tr("The user told $b%scriptname$b uninstaller to exit, so any work in progress can be saved.")
							break;
						}
						default:
						{
							echo -i=$msgtype(GenericWarning) $tr("The user has quit $b%scriptname$b's uninstaller.")
							break;
						}
					}
				}
			}
			else
			{
				dialog.message -b ($tr("Uninstalling %scriptname - KVIrc"), $tr("Uninstallation for <b>%scriptname</b> will proceed now."), information, \
				$tr("&Yes Proceed"), $tr("&Quit"))
				{
					%scriptname = "SysInfo Pack"
					switch($0)
					{
						case("0"):
						{
							echo -i=$msgtype(GenericStatus) $tr("The user told $b%scriptname$b's uninstaller to proceed.")
							echo -i=$msgtype(GenericStatus) $tr("There were no open editor windows.")
							echo -i=$msgtype(GenericVerbose) $tr("Now uninstalling $balias(%aliasname)$b...")
							alias(%aliasname){}
							echo -i=$msgtype(GenericVerbose) $tr("Uninstall of $balias(%aliasname)$b is now complete!")
							break;
						}
						default:
						{
							echo -i=$msgtype(GenericWarning) $tr("The user has quit $balias(%aliasname)$b's uninstaller.")
							break;
						}
					}
				}
			}
			break;
		}
		case(""):
		{
			echo $tr("Usage:")
			echo "     "/%aliasname <cpu> %S $tr("Output CPU information.")
			echo "     "/%aliasname <net> %S $tr("Output Network Card information.")
			echo "     "/%aliasname <mob> %S $tr("Output Motherboard information.")
			echo "     "/%aliasname <gfx> %S $tr("Output Graphics Card information.")
			echo "     "/%aliasname <snd> %S $tr("Output Audio Card information.")
			echo "     "/%aliasname <osv> %S $tr("Output Operative system information.")
			echo "     "/%aliasname <hdd> %S $tr("Output HDD/SSD information.")
			echo "     "/%aliasname <sen> %S $tr("Output Sensors information.")
			echo "     "/%aliasname <share> <nick> %S $tr("Outputs a link to share %scriptname with a specific KVIrc user.")
			echo "     "/%aliasname <share> %S $tr("Output a link to share %scriptname with other KVIrc users.")
			echo \n
			echo "     "/%aliasname <uninstall> %S $tr("This uninstalls the alias(%aliasname) from KVIrc.")
			echo \n
			echo -i=$msgtype(GenericVerbose) %scriptname %version - %cpright\n

			exec ("inxi -c 4 -! 31 -V")
			{
				echo $1;
			}
			break;
		}
		default:
			echo -i=$msgtype(GenericWarning) $tr("Command not defined, type /$b%aliasname$b for usage information!")
			break;
	}
}
